name: Build Job
on: 
  push:
    branches: 
      - main
env:
  ECR_REPOSITORY: 'vprofileappimg'
 
permissions: 
  contents: read

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Maven Build
        run: mvn install


  Testing:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Run tests on main branch
        run: mvn test

      - name: Checkstyle
        run: mvn checkstyle:checkstyle
  

  BUILD_AND_PUBLISH:
    name: BUILD_AND_PUBLISH
    runs-on: ubuntu-latest
    environment: production
    needs: [Build, Testing]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr # output can be used in future steps
        uses: aws-actions/amazon-ecr-login@v3
      
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }} # access steps then id login-ecr then outputs then registry URL without app name 
          IMAGE_TAG: ${{ github.sha }} # using commit SHA as image tag commit of current workflow run
        run: | # run in the ubuntu-latest environment //. mean cuurent directory if not specified will run inside Dockerfile directory same like docker file work directory
          docker build -f Docker-files/app/multistage/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .     
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


